{"version":3,"sources":["deliverer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMqB;;;;;;;AAMnB,WANmB,SAMnB,CAAY,OAAZ,EAAqB,YAArB,EAAmC;wCANhB,WAMgB;;AACjC,QAAI,OAAJ,EAAa;AACX,WAAK,QAAL,GAAgB,mBAAmB,KAAnB,GACR,OADQ,GACE,CAAC,OAAD,CADF,CADL;KAAb,MAGO;AACL,WAAK,QAAL,GAAgB,EAAhB,CADK;KAHP;;AAOA,QAAI,YAAJ,EAAkB;AAChB,WAAK,aAAL,GAAqB,wBAAwB,KAAxB,GACR,YADQ,GACO,CAAC,YAAD,CADP,CADL;KAAlB,MAGO;AACL,WAAK,aAAL,GAAqB,EAArB,CADK;KAHP;GARF;;;;;;;;6BANmB;;;;;;;;;;;uBA2BJ,KAAK,aAAL,CAAmB,OAAnB,CAA2B,gBAAQ;AAC9C,wBAAK,QAAL,CAAc,OAAd,CAAsB;2BAAO,KAAK,IAAL,CAAU,GAAV;mBAAP,CAAtB,CAD8C;iBAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAUnC,KAAK;AACV,UAAI,eAAe,KAAf,EAAsB;AACxB,aAAK,QAAL,GAAgB,GAAhB,CADwB;OAA1B,MAEO;AACL,aAAK,QAAL,GAAgB,CAAC,GAAD,CAAhB,CADK;OAFP;;;;2BAOK,KAAK;AACV,WAAK,QAAL,CAAc,IAAd,CAAmB,GAAnB,EADU;;;;;;;;;;4BAQJ,MAAM;AACZ,UAAI,gBAAgB,KAAhB,EAAuB;AACzB,aAAK,YAAL,GAAoB,IAApB,CADyB;OAA3B,MAEO;AACL,aAAK,aAAL,GAAqB,CAAC,IAAD,CAArB,CADK;OAFP;;;;;;;;;;4BAWM,MAAM;AACZ,WAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,EADY;;;SAjEK","file":"deliverer.js","sourcesContent":["\n/**\n * @class Deliverer\n * @description\n *   Deliver emails to a destination that have the source as an attachment\n */\nexport default class Deliverer {\n\n  /**\n   * @param  {Source[]} [sources]\n   * @param  {Destination[]} [destinations]\n   */\n  constructor(sources, destinations) {\n    if (sources) {\n      this._sources = sources instanceof Array \n            ? sources : [sources];\n    } else {\n      this._sources = [];\n    }\n    \n    if (destinations) {\n      this._destinations = destinations instanceof Array \n                 ? destinations : [destinations];\n    } else {\n      this._destinations = [];\n    }\n  }\n\n  /**\n   * Submit the source to destinations\n   * @return {Promise}\n   */\n  async send() {\n    return await this._destinations.forEach(dest => {\n      this._sources.forEach(src => dest.send(src));\n    });\n  }\n\n  /**\n   * Set the sources collection\n   * Resets the sources collection\n   * @param {Source|Source[]} src\n   */\n  setSrc(src) {\n    if (src instanceof Array) {\n      this._sources = src;\n    } else {\n      this._sources = [src];\n    }\n  }\n\n  addSrc(src) {\n    this._sources.push(src)\n  }\n\n  /**\n   * Set the destinations collection\n   * @param {Destination|Destination[]} dest\n   */\n  setDest(dest) {\n    if (dest instanceof Array) {\n      this._destination = dest;\n    } else {\n      this._destinations = [dest];\n    }\n  }\n\n  /**\n   * Add a destination to the destinations collection\n   * @param {Destination} dest\n   */\n  addDest(dest) {\n    this._destination.push(dest);\n  }\n}\n"],"sourceRoot":"/source/"}