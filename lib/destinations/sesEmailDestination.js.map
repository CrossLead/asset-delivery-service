{"version":3,"sources":["destinations/sesEmailDestination.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;IAMqB,mB;;;;;;;;AAKnB,+BAAY,cAAZ,EAA4B;AAAA;;AAAA;;AAG1B,QAAI,CAAC,cAAL,EAAqB;AACnB,YAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,UAAK,GAAL,GAAW,IAAI,iBAAI,GAAR,CAAY,cAAZ,CAAX;AACA,UAAK,GAAL,CAAS,cAAT,GAA0B,4BAAU,MAAK,GAAL,CAAS,YAAnB,EAAiC,MAAK,GAAtC,CAA1B;AAR0B;AAS3B;;;;;4FAEU,G,EAAK,Q;YAEN,W,EACA,O;;;;;;AADA,2B,GAAc,SAAS,KAAT,CAAe,GAAf,C;AACd,uB,GAAU,CAChB,SAAS,KAAK,UADE,EAEhB,gCAAgC,KAAK,eAFrB,EAGhB,2BAHgB,EAIhB,qCAJgB,EAKhB,8CAA8C,YAAY,YAAY,MAAZ,GAAqB,CAAjC,CAA9C,GAAoF,GALpE,EAMhB,IANgB,EAOhB,OAAO,IAAI,QAAJ,CAAa,QAAb,CAPS,EAQhB,IARgB,C;;uBAWH,KAAK,GAAL,CAAS,cAAT,CAAwB;AACnC,0BAAQ,KAAK,YADsB;AAEnC,8BAAW;AACT,0BAAM,QAAQ,IAAR,CAAa,EAAb;AADG;AAFwB,iBAAxB,C;;;;;;;;;AAOb,wBAAQ,GAAR,CAAY,SAAZ;;;;;;;;;;;;;;;;;;iCAIS,I,EAAM;AACjB,WAAK,UAAL,GAAkB,IAAlB;AACD;;;mCAEc,I,EAAM;AACnB,WAAK,YAAL,GAAoB,IAApB;AACD;;;sCAEiB,I,EAAM;AACtB,WAAK,eAAL,GAAuB,IAAvB;AACD;;;;;kBAnDkB,mB","file":"destinations/sesEmailDestination.js","sourcesContent":["import EmailDestination from './emailDestination';\nimport AWS from 'aws-sdk';\nimport promisify from 'es6-promisify';\n\n/**\n * SESDestination @class\n * @extends {EmailDestination}\n */\nexport default class SESEmailDestination extends EmailDestination {\n\n  /**\n   * @param {Object} awsCredentials AWS credentials config object\n   */\n  constructor(awsCredentials) {\n    super();\n\n    if (!awsCredentials) {\n      throw new Error('AWS credentials required');\n    }\n    \n    this.ses = new AWS.SES(awsCredentials);\n    this.ses.sendEmailAsync = promisify(this.ses.sendRawEmail, this.ses);\n  }\n\n  async send(src, filePath) {\n    try {\n      const filePathArr = filePath.split('/');\n      const message = [\n      'To: ' + this._toAddress,\n      '\\nSubject: Screenshots for ' + this._messageSubject,\n      '\\nContent-Type: image/png',\n      '\\nContent-Transfer-Encoding: base64',\n      '\\nContent-Disposition: inline; filename=\"' + filePathArr[filePathArr.length - 1] + '\"',\n      '\\n',\n      '\\n' + src.toString('base64'),\n      '\\n'\n      ];\n\n      return await this.ses.sendEmailAsync({\n        Source: this._fromAddress,\n        RawMessage:{\n          Data: message.join('')\n        }\n      });\n    } catch (err) {\n      console.log('error: ', err);\n    }\n  }\n\n  setToAddress(addr) {\n    this._toAddress = addr;\n  }\n\n  setFromAddress(addr) {\n    this._fromAddress = addr;\n  }\n\n  setMessageSubject(subj) {\n    this._messageSubject = subj;\n  }\n}\n"],"sourceRoot":"/source/"}