{"version":3,"sources":["destinations/sesEmailDestination.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;IAMqB,mB;;;;;;;;AAKnB,+BAAY,cAAZ,EAA4B;AAAA;;AAAA;;AAG1B,QAAI,CAAC,cAAL,EAAqB;AACnB,YAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,UAAK,GAAL,GAAW,IAAI,iBAAI,GAAR,CAAY,cAAZ,CAAX;AACA,UAAK,GAAL,CAAS,cAAT,GAA0B,4BAAU,MAAK,GAAL,CAAS,YAAnB,EAAiC,MAAK,GAAtC,CAA1B;AAR0B;AAS3B;;;;;4FAEU,U,EAAY,G;YAEb,O,EAIE,O,EACA,W;;;;;;AALF,uB,GAAU,CAAC,SAAS,KAAK,UAAf,C;;AACf,wBAAQ,GAAR,CAAY,aAAZ,IAA6B,SAA9B,GAA2C,QAAQ,IAAR,CAAa,uBAAuB,QAAQ,GAAR,CAAY,aAAhD,CAA3C,GAA6G,QAAQ,IAAR,CAAa,gBAAgB,KAAK,eAAlC,CAA7G;AACA,wBAAQ,IAAR,CAAa,6DAAb;;AAEA,qBAAQ,OAAR,IAAmB,UAAnB,EAA+B;AACvB,6BADuB,GACT,QAAQ,KAAR,CAAc,GAAd,CADS;;AAE7B,0BAAQ,IAAR,CAAa,IAAb;AACA,0BAAQ,IAAR,CAAa,qBAAb;AACA,0BAAQ,IAAR,CAAa,2BAAb;AACA,0BAAQ,IAAR,CAAa,qCAAb;AACA,0BAAQ,IAAR,CAAa,8CAA8C,YAAY,YAAY,MAAZ,GAAqB,CAAjC,CAA9C,GAAoF,GAAjG;AACA,0BAAQ,IAAR,CAAa,IAAb;AACA,0BAAQ,IAAR,CAAa,OAAO,WAAW,OAAX,EAAoB,QAApB,CAA6B,QAA7B,CAApB;AACA,0BAAQ,IAAR,CAAa,IAAb;AACD;;;uBAEY,KAAK,GAAL,CAAS,cAAT,CAAwB;AACnC,0BAAQ,KAAK,YADsB;AAEnC,8BAAW;AACT,0BAAM,QAAQ,IAAR,CAAa,EAAb;AADG;AAFwB,iBAAxB,C;;;;;;;;;AAOb,wBAAQ,GAAR,CAAY,SAAZ;;;;;;;;;;;;;;;;;;iCAIS,I,EAAM;AACjB,WAAK,UAAL,GAAkB,IAAlB;AACD;;;mCAEc,I,EAAM;AACnB,WAAK,YAAL,GAAoB,IAApB;AACD;;;sCAEiB,I,EAAM;AACtB,WAAK,eAAL,GAAuB,IAAvB;AACD;;;;;kBAvDkB,mB","file":"destinations/sesEmailDestination.js","sourcesContent":["import EmailDestination from './emailDestination';\nimport AWS from 'aws-sdk';\nimport promisify from 'es6-promisify';\n\n/**\n * SESDestination @class\n * @extends {EmailDestination}\n */\nexport default class SESEmailDestination extends EmailDestination {\n\n  /**\n   * @param {Object} awsCredentials AWS credentials config object\n   */\n  constructor(awsCredentials) {\n    super();\n\n    if (!awsCredentials) {\n      throw new Error('AWS credentials required');\n    }\n    \n    this.ses = new AWS.SES(awsCredentials);\n    this.ses.sendEmailAsync = promisify(this.ses.sendRawEmail, this.ses);\n  }\n\n  async send(assetArray, src) {\n    try {\n      const message = ['To: ' + this._toAddress];\n      (process.env.TRAVIS_COMMIT != undefined) ? message.push('\\nSubject: Commit ' + process.env.TRAVIS_COMMIT) :  message.push('\\nSubject: ' + this._messageSubject);\n      message.push('\\nContent-Type: multipart/mixed; boundary=\"simple boundary\"');\n\n      for(var element in assetArray) {\n        const filePathArr = element.split('/');\n        message.push('\\n');\n        message.push('\\n--simple boundary');\n        message.push('\\nContent-Type: image/png');\n        message.push('\\nContent-Transfer-Encoding: base64');\n        message.push('\\nContent-Disposition: inline; filename=\"' + filePathArr[filePathArr.length - 1] + '\"');\n        message.push('\\n');\n        message.push('\\n' + assetArray[element].toString('base64'));\n        message.push('\\n');\n      }\n\n      return await this.ses.sendEmailAsync({\n        Source: this._fromAddress,\n        RawMessage:{\n          Data: message.join('')\n        }\n      });\n    } catch (err) {\n      console.log('error: ', err);\n    }\n  }\n\n  setToAddress(addr) {\n    this._toAddress = addr;\n  }\n\n  setFromAddress(addr) {\n    this._fromAddress = addr;\n  }\n\n  setMessageSubject(subj) {\n    this._messageSubject = subj;\n  }\n}\n"],"sourceRoot":"/source/"}