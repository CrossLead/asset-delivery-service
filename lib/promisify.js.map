{"version":3,"sources":["promisify.js"],"names":[],"mappings":";;;;;;kBACe,UAAU,QAAV,EAAoB,QAApB,EAA8B;AAC3C,SAAO,YAAmB;sCAAN;;KAAM;;AACxB,UAAM,oBAAoB,YAAY,SAAS,SAAT,CADd;;AAGxB,QAAI,eAAe,SAAf,CAHoB;AAIxB,QAAI,YAAY,SAAS,OAAT,EAAkB;AAChC,qBAAe,SAAS,OAAT,CADiB;KAAlC,MAEO,IAAI,QAAJ,EAAc;AACnB,qBAAe,QAAf,CADmB;KAAd;;AAIP,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAqB;AACtC,WAAK,IAAL,CAAU,UAAC,GAAD,EAAkB;2CAAT;;SAAS;;AAC1B,YAAI,GAAJ,EAAS;AACP,iBAAO,OAAO,GAAP,CAAP,CADO;SAAT,CAD0B;;AAK1B,YAAI,UAAU,CAAC,CAAE,iBAAF,EAAqB;AAClC,iBAAO,QAAQ,KAAK,CAAL,CAAR,CAAP,CADkC;SAApC;;AAIA,gBAAQ,IAAR,EAT0B;OAAlB,CAAV,CADsC;;AAatC,eAAS,KAAT,CAAe,YAAf,EAA6B,IAA7B,EAbsC;KAArB,CAAnB,CAVwB;GAAnB,CADoC;CAA9B","file":"promisify.js","sourcesContent":["\nexport default function (original, settings) {\n  return function (...args) {\n    const multipleArguments = settings && settings.multiArgs;\n\n    let _promisified = undefined;\n    if (settings && settings.thisArg) {\n      _promisified = settings.thisArg;\n    } else if (settings) {\n      _promisified = settings;\n    }\n\n    return new Promise((resolve, reject) => {\n      args.push((err, ...args) => {\n        if (err) {\n          return reject(err);\n        };\n\n        if (false === !! multipleArguments) {\n          return resolve(args[0])\n        }\n\n        resolve(args);\n      });\n\n      original.apply(_promisified, args);\n    });\n  }\n}\n"],"sourceRoot":"/source/"}